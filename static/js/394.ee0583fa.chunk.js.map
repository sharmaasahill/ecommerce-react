{"version":3,"file":"static/js/394.ee0583fa.chunk.js","mappings":"2NA2BA,EAxBc,SAAHA,GAA4B,IAAtBC,EAAKD,EAALC,MAAOC,EAAOF,EAAPE,QACtBC,GAA8BC,EAAAA,EAAAA,WAAS,GAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAU1B,OARAI,EAAAA,EAAAA,YAAU,WAGRC,YAAW,WACTF,GAAW,EACb,GAAG,IACL,GAAG,IAEID,GACLI,EAAAA,EAAAA,MAAA,OAAKC,UAAS,SAAAC,OAAWZ,EAAK,SAAQa,SAAA,EACpCC,EAAAA,EAAAA,KAAA,SAAOC,IAAKC,EAAMC,UAAQ,EAACC,UAAQ,EAACC,MAAO,CAAEC,QAAS,WACtDV,EAAAA,EAAAA,MAAA,OAAKC,UAAU,gBAAeE,SAAA,EAC5BC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,gBAAeE,SAAEZ,KAChCa,EAAAA,EAAAA,KAAA,OAAKH,UAAU,WAAUE,UACvBC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,2BAInB,IACN,C,mGCTA,EAfkB,SAAHZ,GAAkC,IAA5BsB,EAAKtB,EAALsB,MAAUC,GAAUC,EAAAA,EAAAA,GAAAxB,EAAAyB,GACvC,OACEd,EAAAA,EAAAA,MAAA,OAAKC,UAAU,QAAOE,SAAA,EACpBC,EAAAA,EAAAA,KAAA,SAAAW,EAAAA,EAAAA,GAAA,CAAOd,UAAU,cAAiBW,KAClCR,EAAAA,EAAAA,KAAA,SACEH,UAAS,GAAAC,OACPU,EAAWI,MAAMC,OAAS,SAAW,GAAE,qBACrBd,SAEnBQ,MAIT,C,yICXaO,EAAuBC,EAAAA,GAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,6LAYjCC,EAAgBJ,EAAAA,GAAOK,KAAIC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wSAqB3BI,GAAuBP,EAAAA,EAAAA,IAAOQ,EAAAA,YAAPR,CAAmBS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,qH,4GC3BjDO,EAAoB,CACxBC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,QAAS,IAwGX,EArGoB,WAClB,IAAAzC,GAAoCC,EAAAA,EAAAA,UAASoC,GAAkBnC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxD0C,EAAUxC,EAAA,GAAEyC,EAAazC,EAAA,GACxBoC,EAAwCI,EAAxCJ,UAAWC,EAA6BG,EAA7BH,SAAUC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAC9BG,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,GAChCC,GAA4C9C,EAAAA,EAAAA,WAAS,GAAM+C,GAAA7C,EAAAA,EAAAA,GAAA4C,EAAA,GAApDE,EAAcD,EAAA,GAAEE,EAAiBF,EAAA,GAClCG,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GACpB,IAAAC,EAAwBD,EAAME,OAAtBC,EAAIF,EAAJE,KAAMjC,EAAK+B,EAAL/B,MACdmB,GAAapB,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAAImB,GAAU,IAAAgB,EAAAA,EAAAA,GAAA,GAAGD,EAAOjC,IACzC,EAKMmC,EAAY,eAAA9D,GAAA+D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOT,GAAK,OAAAO,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC/Bb,EAAMc,iBACNjB,GAASkB,EAAAA,EAAAA,IAAc9C,EAAAA,EAAAA,GAAC,CAAC,EAAImB,KAC7BQ,GAAkB,GAAM,wBAAAe,EAAAK,OAAA,GAAAP,EAAA,KACzB,gBAJiBQ,GAAA,OAAA1E,EAAA2E,MAAA,KAAAC,UAAA,KAKVC,GAAcC,EAAAA,EAAAA,YAAWC,EAAAA,GAAzBF,UACR,OACElE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yBAAwBE,SAAA,EACrCH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBE,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,kBAAiBE,SAAC,aAChCH,EAAAA,EAAAA,MAAA,MAAIC,UAAU,aAAYE,SAAA,EACxBH,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBE,SAAA,CAAC,YAE9BH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAM,SAAE+D,SAEVlE,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBE,SAAA,CAAC,YAE9BH,EAAAA,EAAAA,MAAA,QAAAG,SAAA,CAAM,SAAE+D,EAAY,IAAM,SAE5BlE,EAAAA,EAAAA,MAAA,MAAIC,UAAU,kBAAiBE,SAAA,EAC7BH,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,kBACRC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,wBAELC,EAAAA,EAAAA,KAAA,QAAAD,UACEH,EAAAA,EAAAA,MAAA,UAAAG,SAAA,CAAQ,SAAE+D,GAAaA,EAAY,IAAM,kBAKjDlE,EAAAA,EAAAA,MAAA,OAAKC,UAAU,eAAcE,SAAA,EAC3BC,EAAAA,EAAAA,KAAA,MAAIH,UAAU,kBAAiBE,SAAC,sBAChCC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,OAAME,SACjBsC,GAqCAzC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBE,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,qBACJC,EAAAA,EAAAA,KAAA,OAAKH,UAAU,iBAAgBE,SAC5BiC,EAAW,GAAAlC,OACLkC,EAAYN,UAAS,KAAA5B,OAAIkC,EAAYL,SAAQ,OAAA7B,OAAMkC,EAAYH,QAAO,eAAA/B,OAAckC,EAAYJ,OACnG,sBAEN5B,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,CAACC,QAjFQ,WAC1B5B,GAAkB,GAClBC,GAASkB,EAAAA,EAAAA,IAAc9C,EAAAA,EAAAA,GAAC,CAAC,EAAIc,IAC/B,EA8EiD1B,SAAC,qBA3CxCH,EAAAA,EAAAA,MAAA,QAAMuE,SAAUpB,EAAahD,SAAA,EAC3BC,EAAAA,EAAAA,KAACoE,EAAAA,EAAS,CACR7D,MAAM,aACN8D,KAAK,OACLxB,KAAK,YACLjC,MAAOc,EACP4C,SAAU7B,EACV8B,UAAQ,KAEVvE,EAAAA,EAAAA,KAACoE,EAAAA,EAAS,CACR7D,MAAM,YACNsC,KAAK,WACLwB,KAAK,OACLzD,MAAOe,EACP2C,SAAU7B,EACV8B,UAAQ,KAEVvE,EAAAA,EAAAA,KAACoE,EAAAA,EAAS,CACR7D,MAAM,UACNsC,KAAK,UACLwB,KAAK,UACLzD,MAAOiB,EACPyC,SAAU7B,EACV8B,UAAQ,KAEVvE,EAAAA,EAAAA,KAACoE,EAAAA,EAAS,CACR7D,MAAM,gBACNsC,KAAK,QACLwB,KAAK,QACLzD,MAAOgB,EACP0C,SAAU7B,EACV8B,UAAQ,KAEVvE,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,CAAAlE,SAAC,0BAiBtB,E,UCvGA,EAVgB,WACd,OACEH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,WAAUE,SAAA,EACvBC,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,WACAA,EAAAA,EAAAA,KAAA,YAGN,E,UCiJA,EA1IoB,WAClB,IAAMwE,GAAWC,EAAAA,EAAAA,MACXC,GAASC,EAAAA,EAAAA,aACTC,GAAWC,EAAAA,EAAAA,eACjBC,GACEf,EAAAA,EAAAA,YAAWC,EAAAA,GADLF,EAASgB,EAAThB,UAAWiB,EAAsBD,EAAtBC,uBAAwBC,EAASF,EAATE,UAEnCC,GAA2BlB,EAAAA,EAAAA,YAAWmB,EAAAA,GAAtCD,uBACFE,GAAclD,EAAAA,EAAAA,IAAYmD,EAAAA,GAC1BpD,GAAcC,EAAAA,EAAAA,IAAYC,EAAAA,GAChC9C,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CiG,EAAS/F,EAAA,GAAEgG,EAAYhG,EAAA,GAC9B6C,GAA0B9C,EAAAA,EAAAA,UAAS,MAAK+C,GAAA7C,EAAAA,EAAAA,GAAA4C,EAAA,GAAjCoD,EAAKnD,EAAA,GAAEoD,EAAQpD,EAAA,GACtBqD,GAA0DpG,EAAAA,EAAAA,WAAS,GAAMqG,GAAAnG,EAAAA,EAAAA,GAAAkG,EAAA,GAAlEE,EAAsBD,EAAA,GAAEE,EAAuBF,EAAA,GAEhDG,EAAiB,CACrB,CAAE3G,MAAO,MAAOC,QAAS,4CACzB,CAAED,MAAO,MAAOC,QAAS,kCACzB,CAAED,MAAO,MAAOC,QAAS,qCACzB,CACED,MAAO,MACPC,QAAS,uDAEX,CACED,MAAO,QACPC,QACE,sFAGA2G,EAAa,WACjBnG,YAAW,WACT2F,GAAa,GACbE,EAAS,KACX,GAAG,IACL,EACMO,EAAc,eAAA9G,GAAA+D,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAO6C,GAAC,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAArD,EAAAA,EAAAA,KAAAG,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACV,GAAnByC,EAAExC,iBACgB,IAAdM,EAAe,CAAAT,EAAAE,KAAA,QAGJ,OAFb+B,GAAa,GACbE,EAASK,EAAe,IACxBC,IAAazC,EAAAkD,OAAA,oBAGVvE,EAAY,CAADqB,EAAAE,KAAA,SAGD,OAFb+B,GAAa,GACbE,EAASK,EAAe,IACxBC,IAAazC,EAAAkD,OAAA,kBAGe,GAA9BX,GAAwB,GACnBlB,GAAWE,EAAQ,CAAAvB,EAAAE,KAAA,gBAAAF,EAAAkD,OAAA,yBAAAlD,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAECiD,MACrB,4CACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,OAA8C,KAArChD,GAAaA,EAAY,IAAM,QAG5CiD,MAAK,SAACC,GAEN,OADAC,QAAQC,IAAIF,GACLA,EAAIG,MACb,IAAG,KAAD,GAK8B,OAnB1BlB,EAAQ5C,EAAA+D,KAgBRlB,EAActB,EAASyC,WAAW9F,EAAAA,aAGrB4E,EACfF,EADFqB,cAAiBnB,cAAa9C,EAAAE,KAAA,GAGJmB,EAAO6C,mBAAmBpB,EAAe,CACnEqB,eAAgB,CACdC,KAAMvB,EACNwB,gBAAiB,CACf7E,KAAMsC,EAAYwC,YAClBC,MAAOzC,EAAYyC,UAGtB,KAAD,IARIxB,EAAa/C,EAAA+D,MASD7B,OACoB,oCAAhCa,EAAcb,MAAMpG,QACtBqG,EAASK,EAAe,IACrBL,EAASK,EAAe,IAC7BP,GAAa,GACbQ,KACgD,cAAvCM,EAAckB,cAAcO,SAC/BxB,EAAaD,EAAckB,cAAcQ,GACzCxB,EAAc,CAClBwB,GAAIzB,EACJ0B,MAAO/C,EACP8B,OAAQhD,GAAaA,EAAY,IAAM,GACvCkE,KAAK,GAADlI,OAAK,IAAImI,MACbpG,QAASG,GAEXiD,EAAuBqB,GACvBhB,GAAa,GACbE,EAASK,EAAe,IACxBlG,YAAW,WACT6E,EAAS,UACX,GAAG,KACHsB,IACAf,EAAuB,KAEzBa,GAAwB,GAAOvC,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAA6E,GAAA7E,EAAA,UAE/BiC,GAAa,GACbE,EAASK,EAAe,IACxBD,GAAwB,GACxBE,IAAa,yBAAAzC,EAAAK,OAAA,GAAAP,EAAA,oBAEhB,gBA/EmBQ,GAAA,OAAA1E,EAAA2E,MAAA,KAAAC,UAAA,KAgFpB,OACEjE,EAAAA,EAAAA,MAACuI,EAAAA,SAAQ,CAAApI,SAAA,EACPC,EAAAA,EAAAA,KAACoI,EAAW,KACZxI,EAAAA,EAAAA,MAACkB,EAAoB,CAAAf,SAAA,EACnBH,EAAAA,EAAAA,MAACuB,EAAa,CAACgD,SAAU4B,EAAehG,SAAA,EACtCC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,2BACJC,EAAAA,EAAAA,KAACsB,EAAoB,KACrBtB,EAAAA,EAAAA,KAAA,QAAAD,SAAM,gFAIL4F,GACC3F,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,CAACoE,SAAU1C,EAAuB5F,UACvCC,EAAAA,EAAAA,KAACsI,EAAO,OAGVtI,EAAAA,EAAAA,KAACiE,EAAAA,EAAM,CAACoE,SAAU1C,EAAuB5F,SAAC,eAG7CsF,IAAarF,EAAAA,EAAAA,KAACuI,EAAAA,EAAK,CAACrJ,MAAOqG,EAAMrG,MAAOC,QAASoG,EAAMpG,eAIhE,C","sources":["components/additional-components/toast/toast.component.jsx","components/form-input/form-input.component.jsx","routes/payment-form/payment-form.styles.jsx","components/address-form/address-form.component.jsx","components/spinner/spinner.component.jsx","routes/payment-form/payment-form.component.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./toast.styles.scss\"; // Create a CSS file for styling\r\nimport beep from \"../../../assets/beep.mp3\";\r\nconst Toast = ({ color, message }) => {\r\n  const [visible, setVisible] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Display the toast on mount\r\n\r\n    setTimeout(() => {\r\n      setVisible(false);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  return visible ? (\r\n    <div className={`toast ${color} show`}>\r\n      <audio src={beep} controls autoPlay style={{ display: \"none\" }} />\r\n      <div className=\"toast-content\">\r\n        <div className=\"toast-message\">{message}</div>\r\n        <div className=\"progress\">\r\n          <div className=\"progress-value\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n};\r\n\r\nexport default Toast;\r\n","import \"./form-input.styles.scss\";\r\nconst FormInput = ({ label, ...otherProps }) => {\r\n  return (\r\n    <div className=\"group\">\r\n      <input className=\"form-input\" {...otherProps} />\r\n      <label\r\n        className={`${\r\n          otherProps.value.length ? \"shrink\" : \"\"\r\n        } form-input-label`}\r\n      >\r\n        {label}\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;\r\n","import styled from \"styled-components\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\n\r\nexport const PaymentFormContainer = styled.div`\r\n  margin: 0px auto 50px auto;\r\n  width: 40%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  @media (max-width: 768px) {\r\n    margin: 0px auto 50px auto;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const FormContainer = styled.form`\r\n  min-width: 200px;\r\n  button {\r\n    margin-top: 30px;\r\n    margin-left: auto;\r\n  }\r\n  span {\r\n    color: red;\r\n    display: block;\r\n    margin-top: 15px;\r\n  }\r\n  @media (max-width: 768px) {\r\n    min-width: 90%;\r\n\r\n    button {\r\n      margin-top: 30px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CardElementContainer = styled(CardElement)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 1px solid #ccc;\r\n  height: 30px;\r\n  padding: 10px;\r\n`;\r\n","import { useState, useContext } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { CartContext } from \"../../contexts/cart.context\";\r\nimport { selectUserAddress } from \"../../store/user/user.selector\";\r\nimport { setUserAddress } from \"../../store/user/user.action\";\r\nimport Button from \"../button/button.component\";\r\nimport \"./address-form.styles.scss\";\r\nimport FormInput from \"../form-input/form-input.component\";\r\n\r\nconst defaultFormFields = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  phone: \"\",\r\n  address: \"\",\r\n};\r\n\r\nconst AddressForm = () => {\r\n  const [formFields, setFormFields] = useState(defaultFormFields);\r\n  const { firstName, lastName, phone, address } = formFields;\r\n  const userAddress = useSelector(selectUserAddress);\r\n  const [isAddressAdded, setIsAddressAdded] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setFormFields({ ...formFields, [name]: value });\r\n  };\r\n  const AddressAddedHandler = () => {\r\n    setIsAddressAdded(false);\r\n    dispatch(setUserAddress({ ...defaultFormFields }));\r\n  };\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    dispatch(setUserAddress({ ...formFields }));\r\n    setIsAddressAdded(true);\r\n  };\r\n  const { cartTotal } = useContext(CartContext);\r\n  return (\r\n    <div className=\"address-form-container\">\r\n      <div className=\"checkout-summary\">\r\n        <h5 className=\"summary-heading\">Summary</h5>\r\n        <ul className=\"list-group\">\r\n          <li className=\"list-group-item\">\r\n            Products\r\n            <span>₹{cartTotal}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            Shipping\r\n            <span>₹{cartTotal ? 150 : 0}</span>\r\n          </li>\r\n          <li className=\"list-group-item\">\r\n            <div>\r\n              <strong>Total amount</strong>\r\n              <p>(including GST)</p>\r\n            </div>\r\n            <span>\r\n              <strong>₹{cartTotal + (cartTotal ? 150 : 0)}</strong>\r\n            </span>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"address-form\">\r\n        <h5 className=\"billing-heading\">Shipping Address</h5>\r\n        <div className=\"mb-4\">\r\n          {!isAddressAdded ? (\r\n            <form onSubmit={handleSubmit}>\r\n              <FormInput\r\n                label=\"First name\"\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={firstName}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <FormInput\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                value={lastName}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <FormInput\r\n                label=\"Address\"\r\n                name=\"address\"\r\n                type=\"address\"\r\n                value={address}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <FormInput\r\n                label=\"Mobile Number\"\r\n                name=\"phone\"\r\n                type=\"phone\"\r\n                value={phone}\r\n                onChange={handleChange}\r\n                required\r\n              />\r\n              <Button>Add Address</Button>\r\n            </form>\r\n          ) : (\r\n            <div className=\"currentAddressContainer\">\r\n              <h3>Current Address</h3>\r\n              <div className=\"currentAddress\">\r\n                {userAddress\r\n                  ? `${userAddress.firstName} ${userAddress.lastName},  ${userAddress.address}, Contact: ${userAddress.phone}`\r\n                  : \"No address added\"}\r\n              </div>\r\n              <Button onClick={AddressAddedHandler}>Edit Address</Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressForm;\r\n","import \"./spinner.styles.scss\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"lds-ring\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\nexport default Spinner;\r\n","import { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport {\r\n  PaymentFormContainer,\r\n  FormContainer,\r\n  CardElementContainer,\r\n} from \"./payment-form.styles\";\r\nimport Button from \"../../components/button/button.component\";\r\nimport { CartContext } from \"../../contexts/cart.context\";\r\nimport { useContext, useState } from \"react\";\r\nimport { selectCurrentUser } from \"../../store/user/user.selector\";\r\nimport { selectUserAddress } from \"../../store/user/user.selector\";\r\nimport Toast from \"../../components/additional-components/toast/toast.component\";\r\nimport AddressForm from \"../../components/address-form/address-form.component\";\r\nimport { OrderContext } from \"../../contexts/orders.context\";\r\nimport { Fragment } from \"react\";\r\nimport Spinner from \"../../components/spinner/spinner.component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst PaymentForm = () => {\r\n  const navigate = useNavigate();\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const { cartTotal, updateCartItemsReducer, cartItems } =\r\n    useContext(CartContext);\r\n  const { addTransactionToOrders } = useContext(OrderContext);\r\n  const currentUser = useSelector(selectCurrentUser);\r\n  const userAddress = useSelector(selectUserAddress);\r\n  const [showToast, setshowToast] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isTransactionInProcess, setTransactionInProcess] = useState(false);\r\n\r\n  const Error_Messages = [\r\n    { color: \"red\", message: \"Cart is Empty. Please add items to cart.\" },\r\n    { color: \"red\", message: \"Please Enter Delivery Address.\" },\r\n    { color: \"red\", message: \"Payment Failed. Please try again.\" },\r\n    {\r\n      color: \"red\",\r\n      message: \"Card Details not found. Please enter valid details.\",\r\n    },\r\n    {\r\n      color: \"green\",\r\n      message:\r\n        \"Payment Successful. Thank you for shopping with us. Redirecting to Orders Page...\",\r\n    },\r\n  ];\r\n  const closeToast = () => {\r\n    setTimeout(() => {\r\n      setshowToast(false);\r\n      setError(null);\r\n    }, 5000);\r\n  };\r\n  const paymentHandler = async (e) => {\r\n    e.preventDefault();\r\n    if (cartTotal === 0) {\r\n      setshowToast(true);\r\n      setError(Error_Messages[0]);\r\n      closeToast();\r\n      return;\r\n    }\r\n    if (!userAddress) {\r\n      setshowToast(true);\r\n      setError(Error_Messages[1]);\r\n      closeToast();\r\n      return;\r\n    }\r\n    setTransactionInProcess(true);\r\n    if (!stripe || !elements) return;\r\n    try {\r\n      const response = await fetch(\r\n        \"/.netlify/functions/create-payment-intent\",\r\n        {\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            amount: (cartTotal + (cartTotal ? 150 : 0)) * 100,\r\n          }),\r\n        }\r\n      ).then((res) => {\r\n        console.log(res);\r\n        return res.json();\r\n      });\r\n\r\n      const cardDetails = elements.getElement(CardElement);\r\n\r\n      const {\r\n        paymentIntent: { client_secret },\r\n      } = response;\r\n\r\n      const paymentResult = await stripe.confirmCardPayment(client_secret, {\r\n        payment_method: {\r\n          card: cardDetails,\r\n          billing_details: {\r\n            name: currentUser.displayName,\r\n            email: currentUser.email,\r\n          },\r\n        },\r\n      });\r\n      if (paymentResult.error) {\r\n        if (paymentResult.error.message === \"Your card number is incomplete.\")\r\n          setError(Error_Messages[3]);\r\n        else setError(Error_Messages[2]);\r\n        setshowToast(true);\r\n        closeToast();\r\n      } else if (paymentResult.paymentIntent.status === \"succeeded\") {\r\n        const payment_id = paymentResult.paymentIntent.id;\r\n        const transaction = {\r\n          id: payment_id,\r\n          items: cartItems,\r\n          amount: cartTotal + (cartTotal ? 150 : 0),\r\n          date: `${new Date()}`,\r\n          address: userAddress,\r\n        };\r\n        addTransactionToOrders(transaction);\r\n        setshowToast(true);\r\n        setError(Error_Messages[4]);\r\n        setTimeout(() => {\r\n          navigate(\"/orders\");\r\n        }, 5000);\r\n        closeToast();\r\n        updateCartItemsReducer([]);\r\n      }\r\n      setTransactionInProcess(false);\r\n    } catch (error) {\r\n      setshowToast(true);\r\n      setError(Error_Messages[3]);\r\n      setTransactionInProcess(false);\r\n      closeToast();\r\n    }\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <AddressForm />\r\n      <PaymentFormContainer>\r\n        <FormContainer onSubmit={paymentHandler}>\r\n          <h3>Credit Card Payment: </h3>\r\n          <CardElementContainer />\r\n          <span>\r\n            **Use Test Card: 4242 4242 4242 4242, Expiry: 04/24, CVV: 242, Pin:\r\n            42424**\r\n          </span>\r\n          {isTransactionInProcess ? (\r\n            <Button disabled={isTransactionInProcess}>\r\n              <Spinner />\r\n            </Button>\r\n          ) : (\r\n            <Button disabled={isTransactionInProcess}>Pay Now</Button>\r\n          )}\r\n        </FormContainer>\r\n        {showToast && <Toast color={error.color} message={error.message} />}\r\n      </PaymentFormContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"names":["_ref","color","message","_useState","useState","_useState2","_slicedToArray","visible","setVisible","useEffect","setTimeout","_jsxs","className","concat","children","_jsx","src","beep","controls","autoPlay","style","display","label","otherProps","_objectWithoutProperties","_excluded","_objectSpread","value","length","PaymentFormContainer","styled","div","_templateObject","_taggedTemplateLiteral","FormContainer","form","_templateObject2","CardElementContainer","CardElement","_templateObject3","defaultFormFields","firstName","lastName","phone","address","formFields","setFormFields","userAddress","useSelector","selectUserAddress","_useState3","_useState4","isAddressAdded","setIsAddressAdded","dispatch","useDispatch","handleChange","event","_event$target","target","name","_defineProperty","handleSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","preventDefault","setUserAddress","stop","_x","apply","arguments","cartTotal","useContext","CartContext","Button","onClick","onSubmit","FormInput","type","onChange","required","navigate","useNavigate","stripe","useStripe","elements","useElements","_useContext","updateCartItemsReducer","cartItems","addTransactionToOrders","OrderContext","currentUser","selectCurrentUser","showToast","setshowToast","error","setError","_useState5","_useState6","isTransactionInProcess","setTransactionInProcess","Error_Messages","closeToast","paymentHandler","e","response","cardDetails","client_secret","paymentResult","payment_id","transaction","abrupt","fetch","method","headers","body","JSON","stringify","amount","then","res","console","log","json","sent","getElement","paymentIntent","confirmCardPayment","payment_method","card","billing_details","displayName","email","status","id","items","date","Date","t0","Fragment","AddressForm","disabled","Spinner","Toast"],"sourceRoot":""}